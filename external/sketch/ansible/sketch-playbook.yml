---
- name: Gather IPs
  hosts: all
  tasks:
    - name: Store the IP of each host in its own variable
      set_fact:
        host_ip_address: "{{ ansible_facts['default_ipv4']['address'] }}"

- name: Configure sketch hosts
  hosts: all
  become: yes
  roles:
    - disable-ipv6

  vars:
    required_ports:
      - 22
      - 80
      - 443
      - 2222
    ansible_command_timeout: 90

  tasks:
    - name: Aggregate IPs from all hosts
      set_fact:
        aggregated_ips: "{{ groups['all'] | map('extract', hostvars, 'host_ip_address') | list }}"
      delegate_to: localhost

    - name: Set the hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Update apt and upgrade
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install required packages
      apt:
        name:
          - unattended-upgrades
          - nginx
        state: present

    - name: Create user
      user:
        name: user
        password: "*"
        shell: /bin/bash
        create_home: yes
        state: present
    - name: Add key to user
      authorized_key:
        user: user
        state: present
        key: "{{ lookup('file', '{{ ssh_pub_key }}') }}"
    - name: Created sudoers.d/user
      copy:
        dest: /etc/sudoers.d/99user
        owner: root
        group: root
        mode: '0600'
        content: |
          user ALL=(ALL) NOPASSWD:ALL
    - name: Create sketchssh
      user:
        name: sketchssh
        password: "*"
        create_home: yes
        shell: /bin/bash
        state: present

    - name: Disable ssh password auth
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication yes'
        line: 'PasswordAuthentication no'
      notify:
      - Reload sshd
    - name: Disabled ssh pam
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?UsePAM yes'
        line: 'UsePAM no'
      notify:
      - Reload sshd
    - name: Disable password auth with pam
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?ChallengeResponseAuthentication yes'
        line: 'ChallengeResponseAuthentication no'
      notify:
      - Reload sshd

    - name: Allow all IPs in aggregated_ips to allow in ufw
      ufw:
        rule: allow
        from_ip: "{{ item }}"
      with_items: "{{ aggregated_ips }}"

    - name: Open required ports
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items: "{{ required_ports }}"

    - name: Block incoming/outgoing ipv6
      ufw:
        rule: deny
        proto: ipv6
        direction: "{{ item }}"
      with_items:
        - in
        - out

    - name: Enable ufw
      ufw:
        state: enabled

    - name: Replace root user in ssh configuration
      become: no
      replace:
        path: "{{ ssh_config_path }}"
        regexp: '(?<=User )root'
        replace: 'user'
      delegate_to: localhost

    - name: Clean up temporary file
      local_action:
        module: file
        path: "ansible_ips.txt"
        state: absent
      become: no

  handlers:
    - name: Reload sshd
      service:
        name: sshd
        state: reloaded
